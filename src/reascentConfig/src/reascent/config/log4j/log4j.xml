<?xml version="1.0" encoding="UTF-8"?>
<!-- 
#Log4J采用类似C语言中的printf函数的打印格式格式化日志信息，打印参数如下： %m 输出代码中指定的消息

#　　%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
#　　%r 输出自应用启动到输出该log信息耗费的毫秒数 
#　　%c 输出所属的类目，通常就是所在类的全名 
#　　%t 输出产生该日志事件的线程名 
#　　%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
#    %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921 
#　　%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)


 -->

<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

	<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">


		<appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
		<param name="File" value="${reascent.root}/logs/reascent/reascent.log" />
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="%p:%m Date:[%-d{yyyy-MM-dd HH:mm:ss}][%l]%n" />
			</layout>
		</appender>


		<appender name="logAppender" class="org.apache.log4j.DailyRollingFileAppender">
			<param name="File" value="${reascent.root}/logs/reascent/reascent.log" />
			<!--
				设置File参数：日志输出文件名
			-->
			<param name="Append" value="true" />
			<!--
				设置是否在重新启动服务时，在原有日志的基础添加新日志
			-->
			<param name="Threshold" value="ALL" />
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="[%-d{yyyy-MM-dd HH:mm:ss}] %p:%m [%t.%l]%n" />
			</layout>
		</appender>


		<appender name="errorAppender" class="org.apache.log4j.DailyRollingFileAppender">
			<param name="File" value="${reascent.root}/logs/reascent/reascent_error.log" />
			<!--
				设置File参数：日志输出文件名
			-->
			<param name="Append" value="true" />
			<!--
				设置是否在重新启动服务时，在原有日志的基础添加新日志
			-->
			<param name="Threshold" value="ERROR" />
			<layout class="org.apache.log4j.PatternLayout">
				<param name="ConversionPattern" value="[%-d{yyyy-MM-dd HH:mm:ss}] %p:%m [%t,%l]%n" />
			</layout>
		</appender>

		<root>
			<priority value="ERROR" />
			<appender-ref ref="CONSOLE" />
			<appender-ref ref="logAppender" />
			<appender-ref ref="errorAppender" />
		</root>
		
	</log4j:configuration>

